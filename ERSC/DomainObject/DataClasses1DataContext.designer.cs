#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERSC.DomainObject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ERSCDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTbTaskListFirst(TbTaskListFirst instance);
    partial void UpdateTbTaskListFirst(TbTaskListFirst instance);
    partial void DeleteTbTaskListFirst(TbTaskListFirst instance);
    partial void InsertTbPointFirst(TbPointFirst instance);
    partial void UpdateTbPointFirst(TbPointFirst instance);
    partial void DeleteTbPointFirst(TbPointFirst instance);
    partial void InsertTbRescueFirst(TbRescueFirst instance);
    partial void UpdateTbRescueFirst(TbRescueFirst instance);
    partial void DeleteTbRescueFirst(TbRescueFirst instance);
    partial void InsertTbSearchFirst(TbSearchFirst instance);
    partial void UpdateTbSearchFirst(TbSearchFirst instance);
    partial void DeleteTbSearchFirst(TbSearchFirst instance);
    partial void InsertTbPoint(TbPoint instance);
    partial void UpdateTbPoint(TbPoint instance);
    partial void DeleteTbPoint(TbPoint instance);
    partial void InsertTbRescue(TbRescue instance);
    partial void UpdateTbRescue(TbRescue instance);
    partial void DeleteTbRescue(TbRescue instance);
    partial void InsertTbSearch(TbSearch instance);
    partial void UpdateTbSearch(TbSearch instance);
    partial void DeleteTbSearch(TbSearch instance);
    partial void InsertTbTaskList(TbTaskList instance);
    partial void UpdateTbTaskList(TbTaskList instance);
    partial void DeleteTbTaskList(TbTaskList instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ERSC.Properties.Settings.Default.ERSCDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TbTaskListFirst> TbTaskListFirsts
		{
			get
			{
				return this.GetTable<TbTaskListFirst>();
			}
		}
		
		public System.Data.Linq.Table<TbPointFirst> TbPointFirsts
		{
			get
			{
				return this.GetTable<TbPointFirst>();
			}
		}
		
		public System.Data.Linq.Table<TbRescueFirst> TbRescueFirsts
		{
			get
			{
				return this.GetTable<TbRescueFirst>();
			}
		}
		
		public System.Data.Linq.Table<TbSearchFirst> TbSearchFirsts
		{
			get
			{
				return this.GetTable<TbSearchFirst>();
			}
		}
		
		public System.Data.Linq.Table<TbPoint> TbPoints
		{
			get
			{
				return this.GetTable<TbPoint>();
			}
		}
		
		public System.Data.Linq.Table<TbRescue> TbRescues
		{
			get
			{
				return this.GetTable<TbRescue>();
			}
		}
		
		public System.Data.Linq.Table<TbSearch> TbSearches
		{
			get
			{
				return this.GetTable<TbSearch>();
			}
		}
		
		public System.Data.Linq.Table<TbTaskList> TbTaskLists
		{
			get
			{
				return this.GetTable<TbTaskList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbTaskListFirst")]
	public partial class TbTaskListFirst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Search_ID;
		
		private string _Point_ID;
		
		private string _Rescue_ID;
		
		private System.Nullable<double> _Probability;
		
		private int _Priority;
		
		private bool _IsAssigned;
		
		private EntityRef<TbPointFirst> _TbPointFirst;
		
		private EntityRef<TbRescueFirst> _TbRescueFirst;
		
		private EntityRef<TbSearchFirst> _TbSearchFirst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSearch_IDChanging(string value);
    partial void OnSearch_IDChanged();
    partial void OnPoint_IDChanging(string value);
    partial void OnPoint_IDChanged();
    partial void OnRescue_IDChanging(string value);
    partial void OnRescue_IDChanged();
    partial void OnProbabilityChanging(System.Nullable<double> value);
    partial void OnProbabilityChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnIsAssignedChanging(bool value);
    partial void OnIsAssignedChanged();
    #endregion
		
		public TbTaskListFirst()
		{
			this._TbPointFirst = default(EntityRef<TbPointFirst>);
			this._TbRescueFirst = default(EntityRef<TbRescueFirst>);
			this._TbSearchFirst = default(EntityRef<TbSearchFirst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Search_ID
		{
			get
			{
				return this._Search_ID;
			}
			set
			{
				if ((this._Search_ID != value))
				{
					if (this._TbSearchFirst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearch_IDChanging(value);
					this.SendPropertyChanging();
					this._Search_ID = value;
					this.SendPropertyChanged("Search_ID");
					this.OnSearch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Point_ID
		{
			get
			{
				return this._Point_ID;
			}
			set
			{
				if ((this._Point_ID != value))
				{
					if (this._TbPointFirst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPoint_IDChanging(value);
					this.SendPropertyChanging();
					this._Point_ID = value;
					this.SendPropertyChanged("Point_ID");
					this.OnPoint_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_ID", DbType="NVarChar(200)")]
		public string Rescue_ID
		{
			get
			{
				return this._Rescue_ID;
			}
			set
			{
				if ((this._Rescue_ID != value))
				{
					if (this._TbRescueFirst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRescue_IDChanging(value);
					this.SendPropertyChanging();
					this._Rescue_ID = value;
					this.SendPropertyChanged("Rescue_ID");
					this.OnRescue_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="Float")]
		public System.Nullable<double> Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAssigned", DbType="Bit NOT NULL")]
		public bool IsAssigned
		{
			get
			{
				return this._IsAssigned;
			}
			set
			{
				if ((this._IsAssigned != value))
				{
					this.OnIsAssignedChanging(value);
					this.SendPropertyChanging();
					this._IsAssigned = value;
					this.SendPropertyChanged("IsAssigned");
					this.OnIsAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbPointFirst_TbTaskListFirst", Storage="_TbPointFirst", ThisKey="Point_ID", OtherKey="Point_ID", IsForeignKey=true)]
		public TbPointFirst TbPointFirst
		{
			get
			{
				return this._TbPointFirst.Entity;
			}
			set
			{
				TbPointFirst previousValue = this._TbPointFirst.Entity;
				if (((previousValue != value) 
							|| (this._TbPointFirst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbPointFirst.Entity = null;
						previousValue.TbTaskListFirsts.Remove(this);
					}
					this._TbPointFirst.Entity = value;
					if ((value != null))
					{
						value.TbTaskListFirsts.Add(this);
						this._Point_ID = value.Point_ID;
					}
					else
					{
						this._Point_ID = default(string);
					}
					this.SendPropertyChanged("TbPointFirst");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRescueFirst_TbTaskListFirst", Storage="_TbRescueFirst", ThisKey="Rescue_ID", OtherKey="Rescue_ID", IsForeignKey=true)]
		public TbRescueFirst TbRescueFirst
		{
			get
			{
				return this._TbRescueFirst.Entity;
			}
			set
			{
				TbRescueFirst previousValue = this._TbRescueFirst.Entity;
				if (((previousValue != value) 
							|| (this._TbRescueFirst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbRescueFirst.Entity = null;
						previousValue.TbTaskListFirsts.Remove(this);
					}
					this._TbRescueFirst.Entity = value;
					if ((value != null))
					{
						value.TbTaskListFirsts.Add(this);
						this._Rescue_ID = value.Rescue_ID;
					}
					else
					{
						this._Rescue_ID = default(string);
					}
					this.SendPropertyChanged("TbRescueFirst");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSearchFirst_TbTaskListFirst", Storage="_TbSearchFirst", ThisKey="Search_ID", OtherKey="Search_ID", IsForeignKey=true)]
		public TbSearchFirst TbSearchFirst
		{
			get
			{
				return this._TbSearchFirst.Entity;
			}
			set
			{
				TbSearchFirst previousValue = this._TbSearchFirst.Entity;
				if (((previousValue != value) 
							|| (this._TbSearchFirst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbSearchFirst.Entity = null;
						previousValue.TbTaskListFirsts.Remove(this);
					}
					this._TbSearchFirst.Entity = value;
					if ((value != null))
					{
						value.TbTaskListFirsts.Add(this);
						this._Search_ID = value.Search_ID;
					}
					else
					{
						this._Search_ID = default(string);
					}
					this.SendPropertyChanged("TbSearchFirst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbPointFirst")]
	public partial class TbPointFirst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Point_ID;
		
		private int _Point_IntID;
		
		private string _Point_ParentID;
		
		private int _Point_TopCoordinate;
		
		private int _Point_LeftCoordinate;
		
		private System.Nullable<double> _Point_TopProjection;
		
		private System.Nullable<double> _Point_LeftProjection;
		
		private string _Poin_Unit;
		
		private int _Point_NumVictim;
		
		private int _Point_TimeToBeDone;
		
		private int _Point_RescueLevel;
		
		private int _Point_CreatPoint;
		
		private int _Point_State;
		
		private bool _Point_IsAllocatedSTeam;
		
		private bool _Point_IsAllocatedRTeam;
		
		private bool _Point_StartSearchDoing;
		
		private bool _Point_EndSearchDoing;
		
		private bool _Point_StartRescueDoing;
		
		private bool _Point_EndRescueDoing;
		
		private EntitySet<TbTaskListFirst> _TbTaskListFirsts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPoint_IDChanging(string value);
    partial void OnPoint_IDChanged();
    partial void OnPoint_IntIDChanging(int value);
    partial void OnPoint_IntIDChanged();
    partial void OnPoint_ParentIDChanging(string value);
    partial void OnPoint_ParentIDChanged();
    partial void OnPoint_TopCoordinateChanging(int value);
    partial void OnPoint_TopCoordinateChanged();
    partial void OnPoint_LeftCoordinateChanging(int value);
    partial void OnPoint_LeftCoordinateChanged();
    partial void OnPoint_TopProjectionChanging(System.Nullable<double> value);
    partial void OnPoint_TopProjectionChanged();
    partial void OnPoint_LeftProjectionChanging(System.Nullable<double> value);
    partial void OnPoint_LeftProjectionChanged();
    partial void OnPoin_UnitChanging(string value);
    partial void OnPoin_UnitChanged();
    partial void OnPoint_NumVictimChanging(int value);
    partial void OnPoint_NumVictimChanged();
    partial void OnPoint_TimeToBeDoneChanging(int value);
    partial void OnPoint_TimeToBeDoneChanged();
    partial void OnPoint_RescueLevelChanging(int value);
    partial void OnPoint_RescueLevelChanged();
    partial void OnPoint_CreatPointChanging(int value);
    partial void OnPoint_CreatPointChanged();
    partial void OnPoint_StateChanging(int value);
    partial void OnPoint_StateChanged();
    partial void OnPoint_IsAllocatedSTeamChanging(bool value);
    partial void OnPoint_IsAllocatedSTeamChanged();
    partial void OnPoint_IsAllocatedRTeamChanging(bool value);
    partial void OnPoint_IsAllocatedRTeamChanged();
    partial void OnPoint_StartSearchDoingChanging(bool value);
    partial void OnPoint_StartSearchDoingChanged();
    partial void OnPoint_EndSearchDoingChanging(bool value);
    partial void OnPoint_EndSearchDoingChanged();
    partial void OnPoint_StartRescueDoingChanging(bool value);
    partial void OnPoint_StartRescueDoingChanged();
    partial void OnPoint_EndRescueDoingChanging(bool value);
    partial void OnPoint_EndRescueDoingChanged();
    #endregion
		
		public TbPointFirst()
		{
			this._TbTaskListFirsts = new EntitySet<TbTaskListFirst>(new Action<TbTaskListFirst>(this.attach_TbTaskListFirsts), new Action<TbTaskListFirst>(this.detach_TbTaskListFirsts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Point_ID
		{
			get
			{
				return this._Point_ID;
			}
			set
			{
				if ((this._Point_ID != value))
				{
					this.OnPoint_IDChanging(value);
					this.SendPropertyChanging();
					this._Point_ID = value;
					this.SendPropertyChanged("Point_ID");
					this.OnPoint_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_IntID", DbType="Int NOT NULL")]
		public int Point_IntID
		{
			get
			{
				return this._Point_IntID;
			}
			set
			{
				if ((this._Point_IntID != value))
				{
					this.OnPoint_IntIDChanging(value);
					this.SendPropertyChanging();
					this._Point_IntID = value;
					this.SendPropertyChanged("Point_IntID");
					this.OnPoint_IntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_ParentID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Point_ParentID
		{
			get
			{
				return this._Point_ParentID;
			}
			set
			{
				if ((this._Point_ParentID != value))
				{
					this.OnPoint_ParentIDChanging(value);
					this.SendPropertyChanging();
					this._Point_ParentID = value;
					this.SendPropertyChanged("Point_ParentID");
					this.OnPoint_ParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_TopCoordinate", DbType="Int NOT NULL")]
		public int Point_TopCoordinate
		{
			get
			{
				return this._Point_TopCoordinate;
			}
			set
			{
				if ((this._Point_TopCoordinate != value))
				{
					this.OnPoint_TopCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Point_TopCoordinate = value;
					this.SendPropertyChanged("Point_TopCoordinate");
					this.OnPoint_TopCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_LeftCoordinate", DbType="Int NOT NULL")]
		public int Point_LeftCoordinate
		{
			get
			{
				return this._Point_LeftCoordinate;
			}
			set
			{
				if ((this._Point_LeftCoordinate != value))
				{
					this.OnPoint_LeftCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Point_LeftCoordinate = value;
					this.SendPropertyChanged("Point_LeftCoordinate");
					this.OnPoint_LeftCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_TopProjection", DbType="Float")]
		public System.Nullable<double> Point_TopProjection
		{
			get
			{
				return this._Point_TopProjection;
			}
			set
			{
				if ((this._Point_TopProjection != value))
				{
					this.OnPoint_TopProjectionChanging(value);
					this.SendPropertyChanging();
					this._Point_TopProjection = value;
					this.SendPropertyChanged("Point_TopProjection");
					this.OnPoint_TopProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_LeftProjection", DbType="Float")]
		public System.Nullable<double> Point_LeftProjection
		{
			get
			{
				return this._Point_LeftProjection;
			}
			set
			{
				if ((this._Point_LeftProjection != value))
				{
					this.OnPoint_LeftProjectionChanging(value);
					this.SendPropertyChanging();
					this._Point_LeftProjection = value;
					this.SendPropertyChanged("Point_LeftProjection");
					this.OnPoint_LeftProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poin_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Poin_Unit
		{
			get
			{
				return this._Poin_Unit;
			}
			set
			{
				if ((this._Poin_Unit != value))
				{
					this.OnPoin_UnitChanging(value);
					this.SendPropertyChanging();
					this._Poin_Unit = value;
					this.SendPropertyChanged("Poin_Unit");
					this.OnPoin_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_NumVictim", DbType="Int NOT NULL")]
		public int Point_NumVictim
		{
			get
			{
				return this._Point_NumVictim;
			}
			set
			{
				if ((this._Point_NumVictim != value))
				{
					this.OnPoint_NumVictimChanging(value);
					this.SendPropertyChanging();
					this._Point_NumVictim = value;
					this.SendPropertyChanged("Point_NumVictim");
					this.OnPoint_NumVictimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_TimeToBeDone", DbType="Int NOT NULL")]
		public int Point_TimeToBeDone
		{
			get
			{
				return this._Point_TimeToBeDone;
			}
			set
			{
				if ((this._Point_TimeToBeDone != value))
				{
					this.OnPoint_TimeToBeDoneChanging(value);
					this.SendPropertyChanging();
					this._Point_TimeToBeDone = value;
					this.SendPropertyChanged("Point_TimeToBeDone");
					this.OnPoint_TimeToBeDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_RescueLevel", DbType="Int NOT NULL")]
		public int Point_RescueLevel
		{
			get
			{
				return this._Point_RescueLevel;
			}
			set
			{
				if ((this._Point_RescueLevel != value))
				{
					this.OnPoint_RescueLevelChanging(value);
					this.SendPropertyChanging();
					this._Point_RescueLevel = value;
					this.SendPropertyChanged("Point_RescueLevel");
					this.OnPoint_RescueLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_CreatPoint", DbType="Int NOT NULL")]
		public int Point_CreatPoint
		{
			get
			{
				return this._Point_CreatPoint;
			}
			set
			{
				if ((this._Point_CreatPoint != value))
				{
					this.OnPoint_CreatPointChanging(value);
					this.SendPropertyChanging();
					this._Point_CreatPoint = value;
					this.SendPropertyChanged("Point_CreatPoint");
					this.OnPoint_CreatPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_State", DbType="Int NOT NULL")]
		public int Point_State
		{
			get
			{
				return this._Point_State;
			}
			set
			{
				if ((this._Point_State != value))
				{
					this.OnPoint_StateChanging(value);
					this.SendPropertyChanging();
					this._Point_State = value;
					this.SendPropertyChanged("Point_State");
					this.OnPoint_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_IsAllocatedSTeam", DbType="Bit NOT NULL")]
		public bool Point_IsAllocatedSTeam
		{
			get
			{
				return this._Point_IsAllocatedSTeam;
			}
			set
			{
				if ((this._Point_IsAllocatedSTeam != value))
				{
					this.OnPoint_IsAllocatedSTeamChanging(value);
					this.SendPropertyChanging();
					this._Point_IsAllocatedSTeam = value;
					this.SendPropertyChanged("Point_IsAllocatedSTeam");
					this.OnPoint_IsAllocatedSTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_IsAllocatedRTeam", DbType="Bit NOT NULL")]
		public bool Point_IsAllocatedRTeam
		{
			get
			{
				return this._Point_IsAllocatedRTeam;
			}
			set
			{
				if ((this._Point_IsAllocatedRTeam != value))
				{
					this.OnPoint_IsAllocatedRTeamChanging(value);
					this.SendPropertyChanging();
					this._Point_IsAllocatedRTeam = value;
					this.SendPropertyChanged("Point_IsAllocatedRTeam");
					this.OnPoint_IsAllocatedRTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_StartSearchDoing", DbType="Bit NOT NULL")]
		public bool Point_StartSearchDoing
		{
			get
			{
				return this._Point_StartSearchDoing;
			}
			set
			{
				if ((this._Point_StartSearchDoing != value))
				{
					this.OnPoint_StartSearchDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_StartSearchDoing = value;
					this.SendPropertyChanged("Point_StartSearchDoing");
					this.OnPoint_StartSearchDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_EndSearchDoing", DbType="Bit NOT NULL")]
		public bool Point_EndSearchDoing
		{
			get
			{
				return this._Point_EndSearchDoing;
			}
			set
			{
				if ((this._Point_EndSearchDoing != value))
				{
					this.OnPoint_EndSearchDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_EndSearchDoing = value;
					this.SendPropertyChanged("Point_EndSearchDoing");
					this.OnPoint_EndSearchDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_StartRescueDoing", DbType="Bit NOT NULL")]
		public bool Point_StartRescueDoing
		{
			get
			{
				return this._Point_StartRescueDoing;
			}
			set
			{
				if ((this._Point_StartRescueDoing != value))
				{
					this.OnPoint_StartRescueDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_StartRescueDoing = value;
					this.SendPropertyChanged("Point_StartRescueDoing");
					this.OnPoint_StartRescueDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_EndRescueDoing", DbType="Bit NOT NULL")]
		public bool Point_EndRescueDoing
		{
			get
			{
				return this._Point_EndRescueDoing;
			}
			set
			{
				if ((this._Point_EndRescueDoing != value))
				{
					this.OnPoint_EndRescueDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_EndRescueDoing = value;
					this.SendPropertyChanged("Point_EndRescueDoing");
					this.OnPoint_EndRescueDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbPointFirst_TbTaskListFirst", Storage="_TbTaskListFirsts", ThisKey="Point_ID", OtherKey="Point_ID")]
		public EntitySet<TbTaskListFirst> TbTaskListFirsts
		{
			get
			{
				return this._TbTaskListFirsts;
			}
			set
			{
				this._TbTaskListFirsts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbTaskListFirsts(TbTaskListFirst entity)
		{
			this.SendPropertyChanging();
			entity.TbPointFirst = this;
		}
		
		private void detach_TbTaskListFirsts(TbTaskListFirst entity)
		{
			this.SendPropertyChanging();
			entity.TbPointFirst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbRescueFirst")]
	public partial class TbRescueFirst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Rescue_ID;
		
		private int _Rescue_IntID;
		
		private int _Rescue_TopCoordinate;
		
		private int _Rescue_LeftCoordinate;
		
		private System.Nullable<double> _Rescue_TopProjection;
		
		private System.Nullable<double> _Rescue_LeftProjection;
		
		private int _Rescue_State;
		
		private string _Rescue_Unit;
		
		private EntitySet<TbTaskListFirst> _TbTaskListFirsts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRescue_IDChanging(string value);
    partial void OnRescue_IDChanged();
    partial void OnRescue_IntIDChanging(int value);
    partial void OnRescue_IntIDChanged();
    partial void OnRescue_TopCoordinateChanging(int value);
    partial void OnRescue_TopCoordinateChanged();
    partial void OnRescue_LeftCoordinateChanging(int value);
    partial void OnRescue_LeftCoordinateChanged();
    partial void OnRescue_TopProjectionChanging(System.Nullable<double> value);
    partial void OnRescue_TopProjectionChanged();
    partial void OnRescue_LeftProjectionChanging(System.Nullable<double> value);
    partial void OnRescue_LeftProjectionChanged();
    partial void OnRescue_StateChanging(int value);
    partial void OnRescue_StateChanged();
    partial void OnRescue_UnitChanging(string value);
    partial void OnRescue_UnitChanged();
    #endregion
		
		public TbRescueFirst()
		{
			this._TbTaskListFirsts = new EntitySet<TbTaskListFirst>(new Action<TbTaskListFirst>(this.attach_TbTaskListFirsts), new Action<TbTaskListFirst>(this.detach_TbTaskListFirsts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rescue_ID
		{
			get
			{
				return this._Rescue_ID;
			}
			set
			{
				if ((this._Rescue_ID != value))
				{
					this.OnRescue_IDChanging(value);
					this.SendPropertyChanging();
					this._Rescue_ID = value;
					this.SendPropertyChanged("Rescue_ID");
					this.OnRescue_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_IntID", DbType="Int NOT NULL")]
		public int Rescue_IntID
		{
			get
			{
				return this._Rescue_IntID;
			}
			set
			{
				if ((this._Rescue_IntID != value))
				{
					this.OnRescue_IntIDChanging(value);
					this.SendPropertyChanging();
					this._Rescue_IntID = value;
					this.SendPropertyChanged("Rescue_IntID");
					this.OnRescue_IntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_TopCoordinate", DbType="Int NOT NULL")]
		public int Rescue_TopCoordinate
		{
			get
			{
				return this._Rescue_TopCoordinate;
			}
			set
			{
				if ((this._Rescue_TopCoordinate != value))
				{
					this.OnRescue_TopCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Rescue_TopCoordinate = value;
					this.SendPropertyChanged("Rescue_TopCoordinate");
					this.OnRescue_TopCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_LeftCoordinate", DbType="Int NOT NULL")]
		public int Rescue_LeftCoordinate
		{
			get
			{
				return this._Rescue_LeftCoordinate;
			}
			set
			{
				if ((this._Rescue_LeftCoordinate != value))
				{
					this.OnRescue_LeftCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Rescue_LeftCoordinate = value;
					this.SendPropertyChanged("Rescue_LeftCoordinate");
					this.OnRescue_LeftCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_TopProjection", DbType="Float")]
		public System.Nullable<double> Rescue_TopProjection
		{
			get
			{
				return this._Rescue_TopProjection;
			}
			set
			{
				if ((this._Rescue_TopProjection != value))
				{
					this.OnRescue_TopProjectionChanging(value);
					this.SendPropertyChanging();
					this._Rescue_TopProjection = value;
					this.SendPropertyChanged("Rescue_TopProjection");
					this.OnRescue_TopProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_LeftProjection", DbType="Float")]
		public System.Nullable<double> Rescue_LeftProjection
		{
			get
			{
				return this._Rescue_LeftProjection;
			}
			set
			{
				if ((this._Rescue_LeftProjection != value))
				{
					this.OnRescue_LeftProjectionChanging(value);
					this.SendPropertyChanging();
					this._Rescue_LeftProjection = value;
					this.SendPropertyChanged("Rescue_LeftProjection");
					this.OnRescue_LeftProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_State", DbType="Int NOT NULL")]
		public int Rescue_State
		{
			get
			{
				return this._Rescue_State;
			}
			set
			{
				if ((this._Rescue_State != value))
				{
					this.OnRescue_StateChanging(value);
					this.SendPropertyChanging();
					this._Rescue_State = value;
					this.SendPropertyChanged("Rescue_State");
					this.OnRescue_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Rescue_Unit
		{
			get
			{
				return this._Rescue_Unit;
			}
			set
			{
				if ((this._Rescue_Unit != value))
				{
					this.OnRescue_UnitChanging(value);
					this.SendPropertyChanging();
					this._Rescue_Unit = value;
					this.SendPropertyChanged("Rescue_Unit");
					this.OnRescue_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRescueFirst_TbTaskListFirst", Storage="_TbTaskListFirsts", ThisKey="Rescue_ID", OtherKey="Rescue_ID")]
		public EntitySet<TbTaskListFirst> TbTaskListFirsts
		{
			get
			{
				return this._TbTaskListFirsts;
			}
			set
			{
				this._TbTaskListFirsts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbTaskListFirsts(TbTaskListFirst entity)
		{
			this.SendPropertyChanging();
			entity.TbRescueFirst = this;
		}
		
		private void detach_TbTaskListFirsts(TbTaskListFirst entity)
		{
			this.SendPropertyChanging();
			entity.TbRescueFirst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbSearchFirst")]
	public partial class TbSearchFirst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Search_ID;
		
		private int _Search_IntID;
		
		private int _Search_TopCoordinate;
		
		private int _Search_LeftCoordinate;
		
		private System.Nullable<double> _Search_TopProjection;
		
		private System.Nullable<double> _Search_LeftProjection;
		
		private int _Search_State;
		
		private string _Search_Unit;
		
		private EntitySet<TbTaskListFirst> _TbTaskListFirsts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearch_IDChanging(string value);
    partial void OnSearch_IDChanged();
    partial void OnSearch_IntIDChanging(int value);
    partial void OnSearch_IntIDChanged();
    partial void OnSearch_TopCoordinateChanging(int value);
    partial void OnSearch_TopCoordinateChanged();
    partial void OnSearch_LeftCoordinateChanging(int value);
    partial void OnSearch_LeftCoordinateChanged();
    partial void OnSearch_TopProjectionChanging(System.Nullable<double> value);
    partial void OnSearch_TopProjectionChanged();
    partial void OnSearch_LeftProjectionChanging(System.Nullable<double> value);
    partial void OnSearch_LeftProjectionChanged();
    partial void OnSearch_StateChanging(int value);
    partial void OnSearch_StateChanged();
    partial void OnSearch_UnitChanging(string value);
    partial void OnSearch_UnitChanged();
    #endregion
		
		public TbSearchFirst()
		{
			this._TbTaskListFirsts = new EntitySet<TbTaskListFirst>(new Action<TbTaskListFirst>(this.attach_TbTaskListFirsts), new Action<TbTaskListFirst>(this.detach_TbTaskListFirsts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Search_ID
		{
			get
			{
				return this._Search_ID;
			}
			set
			{
				if ((this._Search_ID != value))
				{
					this.OnSearch_IDChanging(value);
					this.SendPropertyChanging();
					this._Search_ID = value;
					this.SendPropertyChanged("Search_ID");
					this.OnSearch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_IntID", DbType="Int NOT NULL")]
		public int Search_IntID
		{
			get
			{
				return this._Search_IntID;
			}
			set
			{
				if ((this._Search_IntID != value))
				{
					this.OnSearch_IntIDChanging(value);
					this.SendPropertyChanging();
					this._Search_IntID = value;
					this.SendPropertyChanged("Search_IntID");
					this.OnSearch_IntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_TopCoordinate", DbType="Int NOT NULL")]
		public int Search_TopCoordinate
		{
			get
			{
				return this._Search_TopCoordinate;
			}
			set
			{
				if ((this._Search_TopCoordinate != value))
				{
					this.OnSearch_TopCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Search_TopCoordinate = value;
					this.SendPropertyChanged("Search_TopCoordinate");
					this.OnSearch_TopCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_LeftCoordinate", DbType="Int NOT NULL")]
		public int Search_LeftCoordinate
		{
			get
			{
				return this._Search_LeftCoordinate;
			}
			set
			{
				if ((this._Search_LeftCoordinate != value))
				{
					this.OnSearch_LeftCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Search_LeftCoordinate = value;
					this.SendPropertyChanged("Search_LeftCoordinate");
					this.OnSearch_LeftCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_TopProjection", DbType="Float")]
		public System.Nullable<double> Search_TopProjection
		{
			get
			{
				return this._Search_TopProjection;
			}
			set
			{
				if ((this._Search_TopProjection != value))
				{
					this.OnSearch_TopProjectionChanging(value);
					this.SendPropertyChanging();
					this._Search_TopProjection = value;
					this.SendPropertyChanged("Search_TopProjection");
					this.OnSearch_TopProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_LeftProjection", DbType="Float")]
		public System.Nullable<double> Search_LeftProjection
		{
			get
			{
				return this._Search_LeftProjection;
			}
			set
			{
				if ((this._Search_LeftProjection != value))
				{
					this.OnSearch_LeftProjectionChanging(value);
					this.SendPropertyChanging();
					this._Search_LeftProjection = value;
					this.SendPropertyChanged("Search_LeftProjection");
					this.OnSearch_LeftProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_State", DbType="Int NOT NULL")]
		public int Search_State
		{
			get
			{
				return this._Search_State;
			}
			set
			{
				if ((this._Search_State != value))
				{
					this.OnSearch_StateChanging(value);
					this.SendPropertyChanging();
					this._Search_State = value;
					this.SendPropertyChanged("Search_State");
					this.OnSearch_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Search_Unit
		{
			get
			{
				return this._Search_Unit;
			}
			set
			{
				if ((this._Search_Unit != value))
				{
					this.OnSearch_UnitChanging(value);
					this.SendPropertyChanging();
					this._Search_Unit = value;
					this.SendPropertyChanged("Search_Unit");
					this.OnSearch_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSearchFirst_TbTaskListFirst", Storage="_TbTaskListFirsts", ThisKey="Search_ID", OtherKey="Search_ID")]
		public EntitySet<TbTaskListFirst> TbTaskListFirsts
		{
			get
			{
				return this._TbTaskListFirsts;
			}
			set
			{
				this._TbTaskListFirsts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbTaskListFirsts(TbTaskListFirst entity)
		{
			this.SendPropertyChanging();
			entity.TbSearchFirst = this;
		}
		
		private void detach_TbTaskListFirsts(TbTaskListFirst entity)
		{
			this.SendPropertyChanging();
			entity.TbSearchFirst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbPoint")]
	public partial class TbPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Point_ID;
		
		private int _Point_IntID;
		
		private string _Point_ParentID;
		
		private int _Point_TopCoordinate;
		
		private int _Point_LeftCoordinate;
		
		private System.Nullable<double> _Point_TopProjection;
		
		private System.Nullable<double> _Point_LeftProjection;
		
		private string _Poin_Unit;
		
		private int _Point_NumVictim;
		
		private int _Point_TimeToBeDone;
		
		private int _Point_RescueLevel;
		
		private int _Point_CreatPoint;
		
		private int _Point_State;
		
		private bool _Point_IsAllocatedSTeam;
		
		private bool _Point_IsAllocatedRTeam;
		
		private bool _Point_StartSearchDoing;
		
		private bool _Point_EndSearchDoing;
		
		private bool _Point_StartRescueDoing;
		
		private bool _Point_EndRescueDoing;
		
		private EntitySet<TbTaskList> _TbTaskLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPoint_IDChanging(string value);
    partial void OnPoint_IDChanged();
    partial void OnPoint_IntIDChanging(int value);
    partial void OnPoint_IntIDChanged();
    partial void OnPoint_ParentIDChanging(string value);
    partial void OnPoint_ParentIDChanged();
    partial void OnPoint_TopCoordinateChanging(int value);
    partial void OnPoint_TopCoordinateChanged();
    partial void OnPoint_LeftCoordinateChanging(int value);
    partial void OnPoint_LeftCoordinateChanged();
    partial void OnPoint_TopProjectionChanging(System.Nullable<double> value);
    partial void OnPoint_TopProjectionChanged();
    partial void OnPoint_LeftProjectionChanging(System.Nullable<double> value);
    partial void OnPoint_LeftProjectionChanged();
    partial void OnPoin_UnitChanging(string value);
    partial void OnPoin_UnitChanged();
    partial void OnPoint_NumVictimChanging(int value);
    partial void OnPoint_NumVictimChanged();
    partial void OnPoint_TimeToBeDoneChanging(int value);
    partial void OnPoint_TimeToBeDoneChanged();
    partial void OnPoint_RescueLevelChanging(int value);
    partial void OnPoint_RescueLevelChanged();
    partial void OnPoint_CreatPointChanging(int value);
    partial void OnPoint_CreatPointChanged();
    partial void OnPoint_StateChanging(int value);
    partial void OnPoint_StateChanged();
    partial void OnPoint_IsAllocatedSTeamChanging(bool value);
    partial void OnPoint_IsAllocatedSTeamChanged();
    partial void OnPoint_IsAllocatedRTeamChanging(bool value);
    partial void OnPoint_IsAllocatedRTeamChanged();
    partial void OnPoint_StartSearchDoingChanging(bool value);
    partial void OnPoint_StartSearchDoingChanged();
    partial void OnPoint_EndSearchDoingChanging(bool value);
    partial void OnPoint_EndSearchDoingChanged();
    partial void OnPoint_StartRescueDoingChanging(bool value);
    partial void OnPoint_StartRescueDoingChanged();
    partial void OnPoint_EndRescueDoingChanging(bool value);
    partial void OnPoint_EndRescueDoingChanged();
    #endregion
		
		public TbPoint()
		{
			this._TbTaskLists = new EntitySet<TbTaskList>(new Action<TbTaskList>(this.attach_TbTaskLists), new Action<TbTaskList>(this.detach_TbTaskLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Point_ID
		{
			get
			{
				return this._Point_ID;
			}
			set
			{
				if ((this._Point_ID != value))
				{
					this.OnPoint_IDChanging(value);
					this.SendPropertyChanging();
					this._Point_ID = value;
					this.SendPropertyChanged("Point_ID");
					this.OnPoint_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_IntID", DbType="Int NOT NULL")]
		public int Point_IntID
		{
			get
			{
				return this._Point_IntID;
			}
			set
			{
				if ((this._Point_IntID != value))
				{
					this.OnPoint_IntIDChanging(value);
					this.SendPropertyChanging();
					this._Point_IntID = value;
					this.SendPropertyChanged("Point_IntID");
					this.OnPoint_IntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_ParentID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Point_ParentID
		{
			get
			{
				return this._Point_ParentID;
			}
			set
			{
				if ((this._Point_ParentID != value))
				{
					this.OnPoint_ParentIDChanging(value);
					this.SendPropertyChanging();
					this._Point_ParentID = value;
					this.SendPropertyChanged("Point_ParentID");
					this.OnPoint_ParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_TopCoordinate", DbType="Int NOT NULL")]
		public int Point_TopCoordinate
		{
			get
			{
				return this._Point_TopCoordinate;
			}
			set
			{
				if ((this._Point_TopCoordinate != value))
				{
					this.OnPoint_TopCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Point_TopCoordinate = value;
					this.SendPropertyChanged("Point_TopCoordinate");
					this.OnPoint_TopCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_LeftCoordinate", DbType="Int NOT NULL")]
		public int Point_LeftCoordinate
		{
			get
			{
				return this._Point_LeftCoordinate;
			}
			set
			{
				if ((this._Point_LeftCoordinate != value))
				{
					this.OnPoint_LeftCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Point_LeftCoordinate = value;
					this.SendPropertyChanged("Point_LeftCoordinate");
					this.OnPoint_LeftCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_TopProjection", DbType="Float")]
		public System.Nullable<double> Point_TopProjection
		{
			get
			{
				return this._Point_TopProjection;
			}
			set
			{
				if ((this._Point_TopProjection != value))
				{
					this.OnPoint_TopProjectionChanging(value);
					this.SendPropertyChanging();
					this._Point_TopProjection = value;
					this.SendPropertyChanged("Point_TopProjection");
					this.OnPoint_TopProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_LeftProjection", DbType="Float")]
		public System.Nullable<double> Point_LeftProjection
		{
			get
			{
				return this._Point_LeftProjection;
			}
			set
			{
				if ((this._Point_LeftProjection != value))
				{
					this.OnPoint_LeftProjectionChanging(value);
					this.SendPropertyChanging();
					this._Point_LeftProjection = value;
					this.SendPropertyChanged("Point_LeftProjection");
					this.OnPoint_LeftProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poin_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Poin_Unit
		{
			get
			{
				return this._Poin_Unit;
			}
			set
			{
				if ((this._Poin_Unit != value))
				{
					this.OnPoin_UnitChanging(value);
					this.SendPropertyChanging();
					this._Poin_Unit = value;
					this.SendPropertyChanged("Poin_Unit");
					this.OnPoin_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_NumVictim", DbType="Int NOT NULL")]
		public int Point_NumVictim
		{
			get
			{
				return this._Point_NumVictim;
			}
			set
			{
				if ((this._Point_NumVictim != value))
				{
					this.OnPoint_NumVictimChanging(value);
					this.SendPropertyChanging();
					this._Point_NumVictim = value;
					this.SendPropertyChanged("Point_NumVictim");
					this.OnPoint_NumVictimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_TimeToBeDone", DbType="Int NOT NULL")]
		public int Point_TimeToBeDone
		{
			get
			{
				return this._Point_TimeToBeDone;
			}
			set
			{
				if ((this._Point_TimeToBeDone != value))
				{
					this.OnPoint_TimeToBeDoneChanging(value);
					this.SendPropertyChanging();
					this._Point_TimeToBeDone = value;
					this.SendPropertyChanged("Point_TimeToBeDone");
					this.OnPoint_TimeToBeDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_RescueLevel", DbType="Int NOT NULL")]
		public int Point_RescueLevel
		{
			get
			{
				return this._Point_RescueLevel;
			}
			set
			{
				if ((this._Point_RescueLevel != value))
				{
					this.OnPoint_RescueLevelChanging(value);
					this.SendPropertyChanging();
					this._Point_RescueLevel = value;
					this.SendPropertyChanged("Point_RescueLevel");
					this.OnPoint_RescueLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_CreatPoint", DbType="Int NOT NULL")]
		public int Point_CreatPoint
		{
			get
			{
				return this._Point_CreatPoint;
			}
			set
			{
				if ((this._Point_CreatPoint != value))
				{
					this.OnPoint_CreatPointChanging(value);
					this.SendPropertyChanging();
					this._Point_CreatPoint = value;
					this.SendPropertyChanged("Point_CreatPoint");
					this.OnPoint_CreatPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_State", DbType="Int NOT NULL")]
		public int Point_State
		{
			get
			{
				return this._Point_State;
			}
			set
			{
				if ((this._Point_State != value))
				{
					this.OnPoint_StateChanging(value);
					this.SendPropertyChanging();
					this._Point_State = value;
					this.SendPropertyChanged("Point_State");
					this.OnPoint_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_IsAllocatedSTeam", DbType="Bit NOT NULL")]
		public bool Point_IsAllocatedSTeam
		{
			get
			{
				return this._Point_IsAllocatedSTeam;
			}
			set
			{
				if ((this._Point_IsAllocatedSTeam != value))
				{
					this.OnPoint_IsAllocatedSTeamChanging(value);
					this.SendPropertyChanging();
					this._Point_IsAllocatedSTeam = value;
					this.SendPropertyChanged("Point_IsAllocatedSTeam");
					this.OnPoint_IsAllocatedSTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_IsAllocatedRTeam", DbType="Bit NOT NULL")]
		public bool Point_IsAllocatedRTeam
		{
			get
			{
				return this._Point_IsAllocatedRTeam;
			}
			set
			{
				if ((this._Point_IsAllocatedRTeam != value))
				{
					this.OnPoint_IsAllocatedRTeamChanging(value);
					this.SendPropertyChanging();
					this._Point_IsAllocatedRTeam = value;
					this.SendPropertyChanged("Point_IsAllocatedRTeam");
					this.OnPoint_IsAllocatedRTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_StartSearchDoing", DbType="Bit NOT NULL")]
		public bool Point_StartSearchDoing
		{
			get
			{
				return this._Point_StartSearchDoing;
			}
			set
			{
				if ((this._Point_StartSearchDoing != value))
				{
					this.OnPoint_StartSearchDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_StartSearchDoing = value;
					this.SendPropertyChanged("Point_StartSearchDoing");
					this.OnPoint_StartSearchDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_EndSearchDoing", DbType="Bit NOT NULL")]
		public bool Point_EndSearchDoing
		{
			get
			{
				return this._Point_EndSearchDoing;
			}
			set
			{
				if ((this._Point_EndSearchDoing != value))
				{
					this.OnPoint_EndSearchDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_EndSearchDoing = value;
					this.SendPropertyChanged("Point_EndSearchDoing");
					this.OnPoint_EndSearchDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_StartRescueDoing", DbType="Bit NOT NULL")]
		public bool Point_StartRescueDoing
		{
			get
			{
				return this._Point_StartRescueDoing;
			}
			set
			{
				if ((this._Point_StartRescueDoing != value))
				{
					this.OnPoint_StartRescueDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_StartRescueDoing = value;
					this.SendPropertyChanged("Point_StartRescueDoing");
					this.OnPoint_StartRescueDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_EndRescueDoing", DbType="Bit NOT NULL")]
		public bool Point_EndRescueDoing
		{
			get
			{
				return this._Point_EndRescueDoing;
			}
			set
			{
				if ((this._Point_EndRescueDoing != value))
				{
					this.OnPoint_EndRescueDoingChanging(value);
					this.SendPropertyChanging();
					this._Point_EndRescueDoing = value;
					this.SendPropertyChanged("Point_EndRescueDoing");
					this.OnPoint_EndRescueDoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbPoint_TbTaskList", Storage="_TbTaskLists", ThisKey="Point_ID", OtherKey="Point_ID")]
		public EntitySet<TbTaskList> TbTaskLists
		{
			get
			{
				return this._TbTaskLists;
			}
			set
			{
				this._TbTaskLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbTaskLists(TbTaskList entity)
		{
			this.SendPropertyChanging();
			entity.TbPoint = this;
		}
		
		private void detach_TbTaskLists(TbTaskList entity)
		{
			this.SendPropertyChanging();
			entity.TbPoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbRescue")]
	public partial class TbRescue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Rescue_ID;
		
		private int _Rescue_IntID;
		
		private int _Rescue_TopCoordinate;
		
		private int _Rescue_LeftCoordinate;
		
		private System.Nullable<double> _Rescue_TopProjection;
		
		private System.Nullable<double> _Rescue_LeftProjection;
		
		private int _Rescue_State;
		
		private string _Rescue_Unit;
		
		private EntitySet<TbTaskList> _TbTaskLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRescue_IDChanging(string value);
    partial void OnRescue_IDChanged();
    partial void OnRescue_IntIDChanging(int value);
    partial void OnRescue_IntIDChanged();
    partial void OnRescue_TopCoordinateChanging(int value);
    partial void OnRescue_TopCoordinateChanged();
    partial void OnRescue_LeftCoordinateChanging(int value);
    partial void OnRescue_LeftCoordinateChanged();
    partial void OnRescue_TopProjectionChanging(System.Nullable<double> value);
    partial void OnRescue_TopProjectionChanged();
    partial void OnRescue_LeftProjectionChanging(System.Nullable<double> value);
    partial void OnRescue_LeftProjectionChanged();
    partial void OnRescue_StateChanging(int value);
    partial void OnRescue_StateChanged();
    partial void OnRescue_UnitChanging(string value);
    partial void OnRescue_UnitChanged();
    #endregion
		
		public TbRescue()
		{
			this._TbTaskLists = new EntitySet<TbTaskList>(new Action<TbTaskList>(this.attach_TbTaskLists), new Action<TbTaskList>(this.detach_TbTaskLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rescue_ID
		{
			get
			{
				return this._Rescue_ID;
			}
			set
			{
				if ((this._Rescue_ID != value))
				{
					this.OnRescue_IDChanging(value);
					this.SendPropertyChanging();
					this._Rescue_ID = value;
					this.SendPropertyChanged("Rescue_ID");
					this.OnRescue_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_IntID", DbType="Int NOT NULL")]
		public int Rescue_IntID
		{
			get
			{
				return this._Rescue_IntID;
			}
			set
			{
				if ((this._Rescue_IntID != value))
				{
					this.OnRescue_IntIDChanging(value);
					this.SendPropertyChanging();
					this._Rescue_IntID = value;
					this.SendPropertyChanged("Rescue_IntID");
					this.OnRescue_IntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_TopCoordinate", DbType="Int NOT NULL")]
		public int Rescue_TopCoordinate
		{
			get
			{
				return this._Rescue_TopCoordinate;
			}
			set
			{
				if ((this._Rescue_TopCoordinate != value))
				{
					this.OnRescue_TopCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Rescue_TopCoordinate = value;
					this.SendPropertyChanged("Rescue_TopCoordinate");
					this.OnRescue_TopCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_LeftCoordinate", DbType="Int NOT NULL")]
		public int Rescue_LeftCoordinate
		{
			get
			{
				return this._Rescue_LeftCoordinate;
			}
			set
			{
				if ((this._Rescue_LeftCoordinate != value))
				{
					this.OnRescue_LeftCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Rescue_LeftCoordinate = value;
					this.SendPropertyChanged("Rescue_LeftCoordinate");
					this.OnRescue_LeftCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_TopProjection", DbType="Float")]
		public System.Nullable<double> Rescue_TopProjection
		{
			get
			{
				return this._Rescue_TopProjection;
			}
			set
			{
				if ((this._Rescue_TopProjection != value))
				{
					this.OnRescue_TopProjectionChanging(value);
					this.SendPropertyChanging();
					this._Rescue_TopProjection = value;
					this.SendPropertyChanged("Rescue_TopProjection");
					this.OnRescue_TopProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_LeftProjection", DbType="Float")]
		public System.Nullable<double> Rescue_LeftProjection
		{
			get
			{
				return this._Rescue_LeftProjection;
			}
			set
			{
				if ((this._Rescue_LeftProjection != value))
				{
					this.OnRescue_LeftProjectionChanging(value);
					this.SendPropertyChanging();
					this._Rescue_LeftProjection = value;
					this.SendPropertyChanged("Rescue_LeftProjection");
					this.OnRescue_LeftProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_State", DbType="Int NOT NULL")]
		public int Rescue_State
		{
			get
			{
				return this._Rescue_State;
			}
			set
			{
				if ((this._Rescue_State != value))
				{
					this.OnRescue_StateChanging(value);
					this.SendPropertyChanging();
					this._Rescue_State = value;
					this.SendPropertyChanged("Rescue_State");
					this.OnRescue_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Rescue_Unit
		{
			get
			{
				return this._Rescue_Unit;
			}
			set
			{
				if ((this._Rescue_Unit != value))
				{
					this.OnRescue_UnitChanging(value);
					this.SendPropertyChanging();
					this._Rescue_Unit = value;
					this.SendPropertyChanged("Rescue_Unit");
					this.OnRescue_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRescue_TbTaskList", Storage="_TbTaskLists", ThisKey="Rescue_ID", OtherKey="Rescue_ID")]
		public EntitySet<TbTaskList> TbTaskLists
		{
			get
			{
				return this._TbTaskLists;
			}
			set
			{
				this._TbTaskLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbTaskLists(TbTaskList entity)
		{
			this.SendPropertyChanging();
			entity.TbRescue = this;
		}
		
		private void detach_TbTaskLists(TbTaskList entity)
		{
			this.SendPropertyChanging();
			entity.TbRescue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbSearch")]
	public partial class TbSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Search_ID;
		
		private int _Search_IntID;
		
		private int _Search_TopCoordinate;
		
		private int _Search_LeftCoordinate;
		
		private System.Nullable<double> _Search_TopProjection;
		
		private System.Nullable<double> _Search_LeftProjection;
		
		private int _Search_State;
		
		private string _Search_Unit;
		
		private EntitySet<TbTaskList> _TbTaskLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearch_IDChanging(string value);
    partial void OnSearch_IDChanged();
    partial void OnSearch_IntIDChanging(int value);
    partial void OnSearch_IntIDChanged();
    partial void OnSearch_TopCoordinateChanging(int value);
    partial void OnSearch_TopCoordinateChanged();
    partial void OnSearch_LeftCoordinateChanging(int value);
    partial void OnSearch_LeftCoordinateChanged();
    partial void OnSearch_TopProjectionChanging(System.Nullable<double> value);
    partial void OnSearch_TopProjectionChanged();
    partial void OnSearch_LeftProjectionChanging(System.Nullable<double> value);
    partial void OnSearch_LeftProjectionChanged();
    partial void OnSearch_StateChanging(int value);
    partial void OnSearch_StateChanged();
    partial void OnSearch_UnitChanging(string value);
    partial void OnSearch_UnitChanged();
    #endregion
		
		public TbSearch()
		{
			this._TbTaskLists = new EntitySet<TbTaskList>(new Action<TbTaskList>(this.attach_TbTaskLists), new Action<TbTaskList>(this.detach_TbTaskLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Search_ID
		{
			get
			{
				return this._Search_ID;
			}
			set
			{
				if ((this._Search_ID != value))
				{
					this.OnSearch_IDChanging(value);
					this.SendPropertyChanging();
					this._Search_ID = value;
					this.SendPropertyChanged("Search_ID");
					this.OnSearch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_IntID", DbType="Int NOT NULL")]
		public int Search_IntID
		{
			get
			{
				return this._Search_IntID;
			}
			set
			{
				if ((this._Search_IntID != value))
				{
					this.OnSearch_IntIDChanging(value);
					this.SendPropertyChanging();
					this._Search_IntID = value;
					this.SendPropertyChanged("Search_IntID");
					this.OnSearch_IntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_TopCoordinate", DbType="Int NOT NULL")]
		public int Search_TopCoordinate
		{
			get
			{
				return this._Search_TopCoordinate;
			}
			set
			{
				if ((this._Search_TopCoordinate != value))
				{
					this.OnSearch_TopCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Search_TopCoordinate = value;
					this.SendPropertyChanged("Search_TopCoordinate");
					this.OnSearch_TopCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_LeftCoordinate", DbType="Int NOT NULL")]
		public int Search_LeftCoordinate
		{
			get
			{
				return this._Search_LeftCoordinate;
			}
			set
			{
				if ((this._Search_LeftCoordinate != value))
				{
					this.OnSearch_LeftCoordinateChanging(value);
					this.SendPropertyChanging();
					this._Search_LeftCoordinate = value;
					this.SendPropertyChanged("Search_LeftCoordinate");
					this.OnSearch_LeftCoordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_TopProjection", DbType="Float")]
		public System.Nullable<double> Search_TopProjection
		{
			get
			{
				return this._Search_TopProjection;
			}
			set
			{
				if ((this._Search_TopProjection != value))
				{
					this.OnSearch_TopProjectionChanging(value);
					this.SendPropertyChanging();
					this._Search_TopProjection = value;
					this.SendPropertyChanged("Search_TopProjection");
					this.OnSearch_TopProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_LeftProjection", DbType="Float")]
		public System.Nullable<double> Search_LeftProjection
		{
			get
			{
				return this._Search_LeftProjection;
			}
			set
			{
				if ((this._Search_LeftProjection != value))
				{
					this.OnSearch_LeftProjectionChanging(value);
					this.SendPropertyChanging();
					this._Search_LeftProjection = value;
					this.SendPropertyChanged("Search_LeftProjection");
					this.OnSearch_LeftProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_State", DbType="Int NOT NULL")]
		public int Search_State
		{
			get
			{
				return this._Search_State;
			}
			set
			{
				if ((this._Search_State != value))
				{
					this.OnSearch_StateChanging(value);
					this.SendPropertyChanging();
					this._Search_State = value;
					this.SendPropertyChanged("Search_State");
					this.OnSearch_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Search_Unit
		{
			get
			{
				return this._Search_Unit;
			}
			set
			{
				if ((this._Search_Unit != value))
				{
					this.OnSearch_UnitChanging(value);
					this.SendPropertyChanging();
					this._Search_Unit = value;
					this.SendPropertyChanged("Search_Unit");
					this.OnSearch_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSearch_TbTaskList", Storage="_TbTaskLists", ThisKey="Search_ID", OtherKey="Search_ID")]
		public EntitySet<TbTaskList> TbTaskLists
		{
			get
			{
				return this._TbTaskLists;
			}
			set
			{
				this._TbTaskLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbTaskLists(TbTaskList entity)
		{
			this.SendPropertyChanging();
			entity.TbSearch = this;
		}
		
		private void detach_TbTaskLists(TbTaskList entity)
		{
			this.SendPropertyChanging();
			entity.TbSearch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbTaskList")]
	public partial class TbTaskList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Search_ID;
		
		private string _Point_ParentID;
		
		private string _Point_ID;
		
		private string _Rescue_ID;
		
		private System.Nullable<double> _Probability;
		
		private int _Priority;
		
		private bool _IsAssigned;
		
		private EntityRef<TbPoint> _TbPoint;
		
		private EntityRef<TbRescue> _TbRescue;
		
		private EntityRef<TbSearch> _TbSearch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSearch_IDChanging(string value);
    partial void OnSearch_IDChanged();
    partial void OnPoint_ParentIDChanging(string value);
    partial void OnPoint_ParentIDChanged();
    partial void OnPoint_IDChanging(string value);
    partial void OnPoint_IDChanged();
    partial void OnRescue_IDChanging(string value);
    partial void OnRescue_IDChanged();
    partial void OnProbabilityChanging(System.Nullable<double> value);
    partial void OnProbabilityChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnIsAssignedChanging(bool value);
    partial void OnIsAssignedChanged();
    #endregion
		
		public TbTaskList()
		{
			this._TbPoint = default(EntityRef<TbPoint>);
			this._TbRescue = default(EntityRef<TbRescue>);
			this._TbSearch = default(EntityRef<TbSearch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Search_ID
		{
			get
			{
				return this._Search_ID;
			}
			set
			{
				if ((this._Search_ID != value))
				{
					if (this._TbSearch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearch_IDChanging(value);
					this.SendPropertyChanging();
					this._Search_ID = value;
					this.SendPropertyChanged("Search_ID");
					this.OnSearch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_ParentID", DbType="NVarChar(200)")]
		public string Point_ParentID
		{
			get
			{
				return this._Point_ParentID;
			}
			set
			{
				if ((this._Point_ParentID != value))
				{
					this.OnPoint_ParentIDChanging(value);
					this.SendPropertyChanging();
					this._Point_ParentID = value;
					this.SendPropertyChanged("Point_ParentID");
					this.OnPoint_ParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point_ID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Point_ID
		{
			get
			{
				return this._Point_ID;
			}
			set
			{
				if ((this._Point_ID != value))
				{
					if (this._TbPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPoint_IDChanging(value);
					this.SendPropertyChanging();
					this._Point_ID = value;
					this.SendPropertyChanged("Point_ID");
					this.OnPoint_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rescue_ID", DbType="NVarChar(200)")]
		public string Rescue_ID
		{
			get
			{
				return this._Rescue_ID;
			}
			set
			{
				if ((this._Rescue_ID != value))
				{
					if (this._TbRescue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRescue_IDChanging(value);
					this.SendPropertyChanging();
					this._Rescue_ID = value;
					this.SendPropertyChanged("Rescue_ID");
					this.OnRescue_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="Float")]
		public System.Nullable<double> Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAssigned", DbType="Bit NOT NULL")]
		public bool IsAssigned
		{
			get
			{
				return this._IsAssigned;
			}
			set
			{
				if ((this._IsAssigned != value))
				{
					this.OnIsAssignedChanging(value);
					this.SendPropertyChanging();
					this._IsAssigned = value;
					this.SendPropertyChanged("IsAssigned");
					this.OnIsAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbPoint_TbTaskList", Storage="_TbPoint", ThisKey="Point_ID", OtherKey="Point_ID", IsForeignKey=true)]
		public TbPoint TbPoint
		{
			get
			{
				return this._TbPoint.Entity;
			}
			set
			{
				TbPoint previousValue = this._TbPoint.Entity;
				if (((previousValue != value) 
							|| (this._TbPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbPoint.Entity = null;
						previousValue.TbTaskLists.Remove(this);
					}
					this._TbPoint.Entity = value;
					if ((value != null))
					{
						value.TbTaskLists.Add(this);
						this._Point_ID = value.Point_ID;
					}
					else
					{
						this._Point_ID = default(string);
					}
					this.SendPropertyChanged("TbPoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRescue_TbTaskList", Storage="_TbRescue", ThisKey="Rescue_ID", OtherKey="Rescue_ID", IsForeignKey=true)]
		public TbRescue TbRescue
		{
			get
			{
				return this._TbRescue.Entity;
			}
			set
			{
				TbRescue previousValue = this._TbRescue.Entity;
				if (((previousValue != value) 
							|| (this._TbRescue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbRescue.Entity = null;
						previousValue.TbTaskLists.Remove(this);
					}
					this._TbRescue.Entity = value;
					if ((value != null))
					{
						value.TbTaskLists.Add(this);
						this._Rescue_ID = value.Rescue_ID;
					}
					else
					{
						this._Rescue_ID = default(string);
					}
					this.SendPropertyChanged("TbRescue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSearch_TbTaskList", Storage="_TbSearch", ThisKey="Search_ID", OtherKey="Search_ID", IsForeignKey=true)]
		public TbSearch TbSearch
		{
			get
			{
				return this._TbSearch.Entity;
			}
			set
			{
				TbSearch previousValue = this._TbSearch.Entity;
				if (((previousValue != value) 
							|| (this._TbSearch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbSearch.Entity = null;
						previousValue.TbTaskLists.Remove(this);
					}
					this._TbSearch.Entity = value;
					if ((value != null))
					{
						value.TbTaskLists.Add(this);
						this._Search_ID = value.Search_ID;
					}
					else
					{
						this._Search_ID = default(string);
					}
					this.SendPropertyChanged("TbSearch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
